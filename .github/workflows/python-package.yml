# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
   branches: [ "main","dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pylint pytest pip-audit coverage
        python -m pip install "setuptools>65.5.0"
        
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Print Environment
      run: |
        python -m pip freeze

    - name: Check that there are no pylint errors and warnings
      run: |
        python -m pylint . --recursive=y --disable=C,R,I

    - name: Enforce minimum pylint score
      run: |
         python -m pylint --fail-under=7 "example_package"

    - name: Check that there are no vulnerable packages
      run: |
         python -m pip_audit

    - name: Test with pytest
      run: |
        pytest

    - name: Generate coverage report
      run: |
       python -m coverage report --fail-under=70

#can do other things, like autopublish documentation, check for code formatting, publish a package only when merging to main, etc